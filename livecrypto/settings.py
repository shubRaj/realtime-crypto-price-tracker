"""
Django settings for livecrypto project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# The BASE_DIR variable points to the project's root directory.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from a .env file located at the project root.
load_dotenv(BASE_DIR / ".env")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY is fetched from environment variables for security purposes.
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG is set based on the environment variable; defaults to True.
DEBUG = False if os.getenv("DEBUG", "true").lower() == "false" else True

# ALLOWED_HOSTS specifies the host/domain names that this Django site can serve.
# Using "*" allows all hosts.
ALLOWED_HOSTS = ["*",]

# Application definition
# List of applications installed and used by this project.
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "tracker.apps.TrackerConfig",
    "rest_framework",
    "corsheaders"
]

# Middleware framework used by the project.
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# The URL dispatcher configuration for the project.
ROOT_URLCONF = "livecrypto.urls"

# Templates configuration: where Django will search for templates, the template engine to use, etc.
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# WSGI application callable used for serving the project.
WSGI_APPLICATION = "livecrypto.wsgi.application"

# Database configuration
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
# Database settings configured using dj_database_url and environment variables.
DATABASES = {
    "default":  dj_database_url.config(default=os.getenv("DATABASE_URL"))
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
# Validators used to check the strength of passwords.
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization settings
# https://docs.djangoproject.com/en/4.2/topics/i18n/
# Language code for this installation.
LANGUAGE_CODE = "en-us"

# Time zone setting.
TIME_ZONE = "UTC"

# Enabling internationalization.
USE_I18N = True

# Enabling timezone support.
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# URL to use when referring to static files (where they will be served from).
STATIC_URL = "static/"
# The absolute path to the directory where collectstatic will collect static files for deployment.
STATIC_ROOT = BASE_DIR / "staticfiles"

# CSRF trusted origins
# Specifies a list of origins that are trusted sources for cross-site request forgery.
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

# CORS configuration
# Allows all origins for Cross-Origin Resource Sharing (CORS).
CORS_ALLOW_ALL_ORIGINS = True
# Specific origins allowed for CORS.
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5500",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
# Type of primary key to use for models that don't specify one.
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Celery configuration
# Configuration settings for Celery, an asynchronous task queue/job queue.
CELERY_BROKER_URL = os.getenv("REDIS_URL")
CELERY_RESULT_BACKEND = os.getenv("REDIS_URL")
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
# Celery beat schedule for periodic tasks.
CELERY_BEAT_SCHEDULE = {
    'every-10seconds': {
        'task': 'tracker.tasks.update_prices',
        'schedule': 10,
    },
}
